{"version":3,"sources":["../builds/node.ts","../builds/models.ts"],"sourcesContent":["// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.\n\nimport type { AbtestingClient, Region as AbtestingRegion } from '@algolia/client-abtesting';\nimport type { AnalyticsClient, Region as AnalyticsRegion } from '@algolia/client-analytics';\nimport type { ClientOptions } from '@algolia/client-common';\nimport type { PersonalizationClient, Region as PersonalizationRegion } from '@algolia/client-personalization';\nimport type { SearchClient } from '@algolia/client-search';\nimport type { RecommendClient } from '@algolia/recommend';\n\nimport { abtestingClient } from '@algolia/client-abtesting';\nimport { analyticsClient } from '@algolia/client-analytics';\nimport { personalizationClient } from '@algolia/client-personalization';\nimport { searchClient } from '@algolia/client-search';\nimport { recommendClient } from '@algolia/recommend';\n\nimport type { InitClientOptions, InitClientRegion } from './models';\n\nexport * from './models';\n\nexport type Algoliasearch = SearchClient & {\n  initRecommend: (initOptions?: InitClientOptions) => RecommendClient;\n  initAnalytics: (initOptions?: InitClientOptions & InitClientRegion<AnalyticsRegion>) => AnalyticsClient;\n  initAbtesting: (initOptions?: InitClientOptions & InitClientRegion<AbtestingRegion>) => AbtestingClient;\n  initPersonalization: (\n    initOptions: InitClientOptions & Required<InitClientRegion<PersonalizationRegion>>,\n  ) => PersonalizationClient;\n};\n\nexport function algoliasearch(appId: string, apiKey: string, options?: ClientOptions): Algoliasearch {\n  if (!appId || typeof appId !== 'string') {\n    throw new Error('`appId` is missing.');\n  }\n\n  if (!apiKey || typeof apiKey !== 'string') {\n    throw new Error('`apiKey` is missing.');\n  }\n\n  const client = searchClient(appId, apiKey, options);\n\n  return {\n    ...client,\n    /**\n     * Get the value of the `algoliaAgent`, used by our libraries internally and telemetry system.\n     */\n    get _ua(): string {\n      return client.transporter.algoliaAgent.value;\n    },\n    initRecommend: (initOptions: InitClientOptions = {}): RecommendClient => {\n      return recommendClient(initOptions.appId || appId, initOptions.apiKey || apiKey, initOptions.options);\n    },\n\n    initAnalytics: (initOptions: InitClientOptions & InitClientRegion<AnalyticsRegion> = {}): AnalyticsClient => {\n      return analyticsClient(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options,\n      );\n    },\n\n    initAbtesting: (initOptions: InitClientOptions & InitClientRegion<AbtestingRegion> = {}): AbtestingClient => {\n      return abtestingClient(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options,\n      );\n    },\n\n    initPersonalization: (\n      initOptions: InitClientOptions & Required<InitClientRegion<PersonalizationRegion>>,\n    ): PersonalizationClient => {\n      return personalizationClient(\n        initOptions.appId || appId,\n        initOptions.apiKey || apiKey,\n        initOptions.region,\n        initOptions.options,\n      );\n    },\n  };\n}\n","// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.\n\nimport type { Region as AbTestingRegion } from '@algolia/client-abtesting';\nimport type { Region as AnalyticsRegion } from '@algolia/client-analytics';\nimport type { ClientOptions } from '@algolia/client-common';\nimport type {\n  AdvancedSyntaxFeatures,\n  AlternativesAsExact,\n  Anchoring,\n  AroundPrecision,\n  AroundRadius,\n  AroundRadiusAll,\n  AutomaticFacetFilter,\n  AutomaticFacetFilters,\n  Banner,\n  BannerImage,\n  BannerImageUrl,\n  BannerLink,\n  Banners,\n  BaseIndexSettings,\n  BaseSearchParams,\n  BaseSearchParamsWithoutQuery,\n  BaseSearchResponse,\n  BooleanString,\n  Condition,\n  Consequence,\n  ConsequenceHide,\n  ConsequenceParams,\n  ConsequenceQuery,\n  ConsequenceQueryObject,\n  CustomDeleteProps,\n  CustomGetProps,\n  CustomPostProps,\n  CustomPutProps,\n  DeletedAtResponse,\n  Distinct,\n  Edit,\n  EditType,\n  ErrorBase,\n  ExactOnSingleWordQuery,\n  Exhaustive,\n  FacetFilters,\n  FacetOrdering,\n  Facets,\n  FacetStats,\n  HighlightResult,\n  HighlightResultOption,\n  IgnorePlurals,\n  IndexSettingsAsSearchParams,\n  MatchedGeoLocation,\n  MatchLevel,\n  Mode,\n  NumericFilters,\n  OptionalFilters,\n  Params,\n  Personalization,\n  Promote,\n  PromoteObjectID,\n  PromoteObjectIDs,\n  QueryType,\n  Range,\n  RankingInfo,\n  Redirect,\n  RedirectRuleIndexData,\n  RedirectRuleIndexMetadata,\n  RedirectURL,\n  RemoveStopWords,\n  RemoveWordsIfNoResults,\n  RenderingContent,\n  ReRankingApplyFilter,\n  SearchPagination,\n  SearchParams,\n  SearchParamsObject,\n  SearchParamsQuery,\n  SemanticSearch,\n  SnippetResult,\n  SnippetResultOption,\n  SortRemainingBy,\n  SupportedLanguage,\n  TagFilters,\n  TaskStatus,\n  TimeRange,\n  TypoTolerance,\n  TypoToleranceEnum,\n  Value,\n  Widgets,\n} from '@algolia/client-search';\nimport { apiClientVersion } from '@algolia/client-search';\n\ntype Region = AbTestingRegion | AnalyticsRegion;\n\nexport * from '@algolia/client-abtesting';\nexport * from '@algolia/client-analytics';\nexport * from '@algolia/client-personalization';\nexport * from '@algolia/client-search';\nexport * from '@algolia/recommend';\n\nexport {\n  AbTestingRegion,\n  AdvancedSyntaxFeatures,\n  AlternativesAsExact,\n  AnalyticsRegion,\n  Anchoring,\n  apiClientVersion,\n  AroundPrecision,\n  AroundRadius,\n  AroundRadiusAll,\n  AutomaticFacetFilter,\n  AutomaticFacetFilters,\n  Banner,\n  BannerImage,\n  BannerImageUrl,\n  BannerLink,\n  Banners,\n  BaseIndexSettings,\n  BaseSearchParams,\n  BaseSearchParamsWithoutQuery,\n  BaseSearchResponse,\n  BooleanString,\n  Condition,\n  Consequence,\n  ConsequenceHide,\n  ConsequenceParams,\n  ConsequenceQuery,\n  ConsequenceQueryObject,\n  CustomDeleteProps,\n  CustomGetProps,\n  CustomPostProps,\n  CustomPutProps,\n  DeletedAtResponse,\n  Distinct,\n  Edit,\n  EditType,\n  ErrorBase,\n  ExactOnSingleWordQuery,\n  Exhaustive,\n  FacetFilters,\n  FacetOrdering,\n  Facets,\n  FacetStats,\n  HighlightResult,\n  HighlightResultOption,\n  IgnorePlurals,\n  IndexSettingsAsSearchParams,\n  MatchedGeoLocation,\n  MatchLevel,\n  Mode,\n  NumericFilters,\n  OptionalFilters,\n  Params,\n  Personalization,\n  Promote,\n  PromoteObjectID,\n  PromoteObjectIDs,\n  QueryType,\n  Range,\n  RankingInfo,\n  Redirect,\n  RedirectRuleIndexData,\n  RedirectRuleIndexMetadata,\n  RedirectURL,\n  Region,\n  RemoveStopWords,\n  RemoveWordsIfNoResults,\n  RenderingContent,\n  ReRankingApplyFilter,\n  SearchPagination,\n  SearchParams,\n  SearchParamsObject,\n  SearchParamsQuery,\n  SemanticSearch,\n  SnippetResult,\n  SnippetResultOption,\n  SortRemainingBy,\n  SupportedLanguage,\n  TagFilters,\n  TaskStatus,\n  TimeRange,\n  TypoTolerance,\n  TypoToleranceEnum,\n  Value,\n  Widgets,\n};\n\n/**\n * Options forwarded to the client initialized via the `init` method.\n */\nexport type InitClientOptions = Partial<{\n  /**\n   * App to target with the initialized client, defaults to the `algoliasearch` appId.\n   */\n  appId: string;\n  /**\n   * API key of the targeted app ID, defaults to the `algoliasearch` apiKey.\n   */\n  apiKey: string;\n  options: ClientOptions;\n}>;\n\nexport type InitClientRegion<TRegion> = Partial<{\n  /**\n   * Available regions of the initialized client.\n   */\n  region: TRegion;\n}>;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,8BAAgC;AAChC,8BAAgC;AAChC,oCAAsC;AACtC,IAAAA,wBAA6B;AAC7B,uBAAgC;;;ACbhC;AAAA;AAAA;AAAA;AAuFA,2BAAiC;AAIjC,2BAAc;AACd,2BAAc;AACd,2BAAc;AACd,2BAAc;AACd,2BAAc;;;AD9Ed,yBAAc,gBAjBd;AA4BO,SAAS,cAAc,OAAe,QAAgB,SAAwC;AACnG,MAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACvC,UAAM,IAAI,MAAM,qBAAqB;AAAA,EACvC;AAEA,MAAI,CAAC,UAAU,OAAO,WAAW,UAAU;AACzC,UAAM,IAAI,MAAM,sBAAsB;AAAA,EACxC;AAEA,QAAM,aAAS,oCAAa,OAAO,QAAQ,OAAO;AAElD,SAAO;AAAA,IACL,GAAG;AAAA;AAAA;AAAA;AAAA,IAIH,IAAI,MAAc;AAChB,aAAO,OAAO,YAAY,aAAa;AAAA,IACzC;AAAA,IACA,eAAe,CAAC,cAAiC,CAAC,MAAuB;AACvE,iBAAO,kCAAgB,YAAY,SAAS,OAAO,YAAY,UAAU,QAAQ,YAAY,OAAO;AAAA,IACtG;AAAA,IAEA,eAAe,CAAC,cAAqE,CAAC,MAAuB;AAC3G,iBAAO;AAAA,QACL,YAAY,SAAS;AAAA,QACrB,YAAY,UAAU;AAAA,QACtB,YAAY;AAAA,QACZ,YAAY;AAAA,MACd;AAAA,IACF;AAAA,IAEA,eAAe,CAAC,cAAqE,CAAC,MAAuB;AAC3G,iBAAO;AAAA,QACL,YAAY,SAAS;AAAA,QACrB,YAAY,UAAU;AAAA,QACtB,YAAY;AAAA,QACZ,YAAY;AAAA,MACd;AAAA,IACF;AAAA,IAEA,qBAAqB,CACnB,gBAC0B;AAC1B,iBAAO;AAAA,QACL,YAAY,SAAS;AAAA,QACrB,YAAY,UAAU;AAAA,QACtB,YAAY;AAAA,QACZ,YAAY;AAAA,MACd;AAAA,IACF;AAAA,EACF;AACF;","names":["import_client_search"]}